header {background-color: lightblue;
    grid-area: header;
  }
  main {background-color: pink;
    min-height: calc(100vh - 54px);
    grid-area: main;
  }
  nav {background-color: lightsalmon;
    grid-area: nav;
  }
  aside {background-color: lightgreen;
    grid-area: aside;
  }
  .banner {background-color: lavender;
    grid-area: banner;
  }
  footer {background-color: khaki;
    color:blue;
    grid-area: footer;
  }
  .container {
    display: grid; /* Using the grid */
    grid-template-areas: /* Notice how I've stacked my areas, just like they look on the page! */
      "header"
      "nav"
      "main"
      "aside"
      "banner"
      "footer";
  }
  @media (min-width: 500px) {
    .container {
      display: grid;
      grid-template-columns: 1fr 3fr; /* the first column is 1 unit (fraction), the second column is 3 units */
      grid-template-areas: /* stack the components how you want them to appear in the columns */
        "header  header" /* stretch header across both columns at the top */
        "nav     nav"
        "aside   main" /* stack these horizontally, aside first, etc */
        "banner  footer";
    }
    nav ul {
      display: flex;
      justify-content: space-between;
    }
  }
  @media (min-width: 700px) {
    .container {
      grid-template-columns: 1fr 4fr 1fr;
      grid-template-areas: 
        "header header  header"
        "nav    main    aside"
        "nav    main    banner"
        "footer footer  footer"
     }
     nav ul {
       flex-direction: column;
     }
  }
  .cal_button{
    width: 50px
}
  .parent {
    display: grid;
    /*Define the width of your columns*/
    grid-template-columns: 0.8fr 1.2fr 0.8fr 1.2fr;
    /*
    you can set the gap for column and row separately
    grid-column-gap: 16px;
    grid-row-gap: 16px;
    or just use grid-gap for both
    */
    grid-gap: 16px;}
  
  .parent div {
    height: 100px;}
  
  .parent div:nth-child(even) {
    background-color: blue; }
  
  .parent div:nth-child(odd) {
    background-color: red; }

  .parent {
  display: grid;
  grid-template-columns: repeat(7, 1fr);
  grid-gap: 16px;
}

.grid-container {
    display: inline-grid;
    grid-template-columns: auto auto auto;
  background-color: #2196F3;
  padding: 10px;
  }
  .grid-item {
      grid-template-columns: 30px;
      grid-template-rows: 20px;
    background-color: rgba(255, 255, 255, 0.8);
    border: 1px solid rgba(0, 0, 0, 0.8);
    padding: 20px;
    font-size: 30px;
    text-align: center;
  }